{
  "hash": "04320e31b1c40d0835e53ed89bd81fbf",
  "result": {
    "markdown": "# Combining tables in SQL {#sec-join}\n\n\n\n\n\n\nBeyond `SELECT` queries, the next most fundamental actions in **SQL** have to do with working with two or more tables simultaneously.  If you have worked in **R**, you may be familiar with the `join_()` family of functions.  Moving beyond `JOIN`, we will also cover subqueries which create temporary tables inside a **SQL** statement.\n\nThe database we'll work with for learning how to combine tables is on IMDb data.  There are **many** tables, see @tbl-imdb-tables.   @tbl-select-kind shows information on the `kind_type` table which describes each `kind`. Other tables contain ID variables which will be important when performing `JOIN`s.\n\n\n::: {.cell fig.asp='0.618'}\n\n```{.r .cell-code}\ncon_imdb <- DBI::dbConnect(\n  RMariaDB::MariaDB(),\n  dbname = \"imdb\",\n  host = Sys.getenv(\"SMITH_HOST\"),\n  user = Sys.getenv(\"SMITH_USER\"),\n  password = Sys.getenv(\"SMITH_PWD\")\n)\n```\n:::\n\n\nAs seen in @tbl-imdb-tables, there are 21 tables in the `imdb` database!  We won't go into details about what each one of them means, but it is a **huge** database with details on movies, TV series, video games, and more.  For our work, we are interested only in movies (and details within, like actors and ratings).\n\n\n::: {.cell output.var='imdb_tables' fig.asp='0.618'}\n\n```{.sql .cell-code}\nSHOW TABLES;\n```\n:::\n\n::: {#tbl-imdb-tables .cell tbl-cap='SHOW all the TABLES in the imdb database.' fig.asp='0.618'}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-condensed\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Tables_in_imdb </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> aka_name </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> aka_title </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> cast_info </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> char_name </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> comp_cast_type </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> company_name </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> company_type </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> complete_cast </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> info_type </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> keyword </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> kind_type </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> link_type </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> movie_companies </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> movie_info </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> movie_info_idx </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> movie_keyword </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> movie_link </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> name </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> person_info </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> role_type </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> title </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\nIf you are curious about the database, you can glance through each of the tables separately using a `SELECT` command (don't forget to use `LIMIT`, especially on a table you haven't previously explored).\n\n\n::: {.cell output.var='select_kind' fig.asp='0.618'}\n\n```{.sql .cell-code}\nSELECT * FROM kind_type\nLIMIT 0, 10;\n```\n:::\n\n::: {#tbl-select-kind .cell tbl-cap='SELECT to glance at the kind_type table in the imdb database.' fig.asp='0.618'}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-condensed\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> id </th>\n   <th style=\"text-align:left;\"> kind </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:left;\"> movie </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:left;\"> tv series </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:left;\"> tv movie </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:left;\"> video movie </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 5 </td>\n   <td style=\"text-align:left;\"> tv mini series </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 6 </td>\n   <td style=\"text-align:left;\"> video game </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:left;\"> episode </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n## Subqueries\n\nA **SQL** **subquery** is a query used as a data source in the `FROM` clause, instead of the usual table.  There was a subquery in @tbl-length-time2 when the task required a function of the *results set* within the `SELECT` clause.\n\nWe could do something similar if we wanted to transform the variables in the select column.  The example is a little bit forced, and there are other ways to obtain the same results.  But hopefully the idea of a subquery is becoming more clear.  Again, a subquery is just a query that becomes the data source for `FROM`.\n\n@sec-reg-expr will cover regular expressions in some detail.  Here we use the function `REGEXP_REPLACE` to remove any characters which are not letters, comma, or space.  The function `LOWER` converts any upper case letters to lower case.\n\n\n\n::: {.cell output.var='act_names' fig.asp='0.618'}\n\n```{.sql .cell-code}\nSELECT name,\n       name_clean,\n       SUBSTRING_INDEX(name_clean, ',', 1) AS last_name,\n       SUBSTRING_INDEX(name_clean, ',', -1) AS first_name\nFROM (\nSELECT LOWER(REGEXP_REPLACE(name, '[^a-z,. ]', '')) AS name_clean,\n       name,\n       id, person_id\nFROM aka_name) AS temp_subquery\nLIMIT 0, 30;\n```\n:::\n\n::: {#tbl-act-names .cell tbl-cap='A subquery is used so that the variable in the subquery can be used and transformed in the SELECT clause.' fig.asp='0.618'}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-condensed\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> name </th>\n   <th style=\"text-align:left;\"> name_clean </th>\n   <th style=\"text-align:left;\"> last_name </th>\n   <th style=\"text-align:left;\"> first_name </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Smith, Jessica Noel </td>\n   <td style=\"text-align:left;\"> smith, jessica noel </td>\n   <td style=\"text-align:left;\"> smith </td>\n   <td style=\"text-align:left;\"> jessica noel </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Pain, L. $ham </td>\n   <td style=\"text-align:left;\"> pain, l. ham </td>\n   <td style=\"text-align:left;\"> pain </td>\n   <td style=\"text-align:left;\"> l. ham </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Boy, $hutter </td>\n   <td style=\"text-align:left;\"> boy, hutter </td>\n   <td style=\"text-align:left;\"> boy </td>\n   <td style=\"text-align:left;\"> hutter </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Dollasign, Ty </td>\n   <td style=\"text-align:left;\"> dollasign, ty </td>\n   <td style=\"text-align:left;\"> dollasign </td>\n   <td style=\"text-align:left;\"> ty </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Sign, Ty Dolla </td>\n   <td style=\"text-align:left;\"> sign, ty dolla </td>\n   <td style=\"text-align:left;\"> sign </td>\n   <td style=\"text-align:left;\"> ty dolla </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Moore, Brandon </td>\n   <td style=\"text-align:left;\"> moore, brandon </td>\n   <td style=\"text-align:left;\"> moore </td>\n   <td style=\"text-align:left;\"> brandon </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> $torm, Country </td>\n   <td style=\"text-align:left;\"> torm, country </td>\n   <td style=\"text-align:left;\"> torm </td>\n   <td style=\"text-align:left;\"> country </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 'Hooper', Simon P.J. Kelly </td>\n   <td style=\"text-align:left;\"> hooper, simon p.j. kelly </td>\n   <td style=\"text-align:left;\"> hooper </td>\n   <td style=\"text-align:left;\"> simon p.j. kelly </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Hooper </td>\n   <td style=\"text-align:left;\"> hooper </td>\n   <td style=\"text-align:left;\"> hooper </td>\n   <td style=\"text-align:left;\"> hooper </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Kelly, Simon P.J. </td>\n   <td style=\"text-align:left;\"> kelly, simon p.j. </td>\n   <td style=\"text-align:left;\"> kelly </td>\n   <td style=\"text-align:left;\"> simon p.j. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Abdul-Hamid, Jaffar </td>\n   <td style=\"text-align:left;\"> abdulhamid, jaffar </td>\n   <td style=\"text-align:left;\"> abdulhamid </td>\n   <td style=\"text-align:left;\"> jaffar </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Al-Hamid, Jaffar Abd </td>\n   <td style=\"text-align:left;\"> alhamid, jaffar abd </td>\n   <td style=\"text-align:left;\"> alhamid </td>\n   <td style=\"text-align:left;\"> jaffar abd </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Svensson, Acke </td>\n   <td style=\"text-align:left;\"> svensson, acke </td>\n   <td style=\"text-align:left;\"> svensson </td>\n   <td style=\"text-align:left;\"> acke </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Viera, Michael 'Power' </td>\n   <td style=\"text-align:left;\"> viera, michael power </td>\n   <td style=\"text-align:left;\"> viera </td>\n   <td style=\"text-align:left;\"> michael power </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Buguelo </td>\n   <td style=\"text-align:left;\"> buguelo </td>\n   <td style=\"text-align:left;\"> buguelo </td>\n   <td style=\"text-align:left;\"> buguelo </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 'El Burro' Rankin', Jorge Van </td>\n   <td style=\"text-align:left;\"> el burro rankin, jorge van </td>\n   <td style=\"text-align:left;\"> el burro rankin </td>\n   <td style=\"text-align:left;\"> jorge van </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Burro, El </td>\n   <td style=\"text-align:left;\"> burro, el </td>\n   <td style=\"text-align:left;\"> burro </td>\n   <td style=\"text-align:left;\"> el </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Van Rankin, Jorge 'Burro' </td>\n   <td style=\"text-align:left;\"> van rankin, jorge burro </td>\n   <td style=\"text-align:left;\"> van rankin </td>\n   <td style=\"text-align:left;\"> jorge burro </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Van Rankin, Jorge </td>\n   <td style=\"text-align:left;\"> van rankin, jorge </td>\n   <td style=\"text-align:left;\"> van rankin </td>\n   <td style=\"text-align:left;\"> jorge </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> van Rankin, Jorge 'El Burro' </td>\n   <td style=\"text-align:left;\"> van rankin, jorge el burro </td>\n   <td style=\"text-align:left;\"> van rankin </td>\n   <td style=\"text-align:left;\"> jorge el burro </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Seigal, Jason </td>\n   <td style=\"text-align:left;\"> seigal, jason </td>\n   <td style=\"text-align:left;\"> seigal </td>\n   <td style=\"text-align:left;\"> jason </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Kaufman, Murray </td>\n   <td style=\"text-align:left;\"> kaufman, murray </td>\n   <td style=\"text-align:left;\"> kaufman </td>\n   <td style=\"text-align:left;\"> murray </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 'Knoccout'Madison, Kareim </td>\n   <td style=\"text-align:left;\"> knoccoutmadison, kareim </td>\n   <td style=\"text-align:left;\"> knoccoutmadison </td>\n   <td style=\"text-align:left;\"> kareim </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Starks, Johnny </td>\n   <td style=\"text-align:left;\"> starks, johnny </td>\n   <td style=\"text-align:left;\"> starks </td>\n   <td style=\"text-align:left;\"> johnny </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Kraemer, 'Logan' Howard </td>\n   <td style=\"text-align:left;\"> kraemer, logan howard </td>\n   <td style=\"text-align:left;\"> kraemer </td>\n   <td style=\"text-align:left;\"> logan howard </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Gee, Emm </td>\n   <td style=\"text-align:left;\"> gee, emm </td>\n   <td style=\"text-align:left;\"> gee </td>\n   <td style=\"text-align:left;\"> emm </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Cusick, Maura </td>\n   <td style=\"text-align:left;\"> cusick, maura </td>\n   <td style=\"text-align:left;\"> cusick </td>\n   <td style=\"text-align:left;\"> maura </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Maura, Maude Cusick </td>\n   <td style=\"text-align:left;\"> maura, maude cusick </td>\n   <td style=\"text-align:left;\"> maura </td>\n   <td style=\"text-align:left;\"> maude cusick </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Wheeler, Mackenzie </td>\n   <td style=\"text-align:left;\"> wheeler, mackenzie </td>\n   <td style=\"text-align:left;\"> wheeler </td>\n   <td style=\"text-align:left;\"> mackenzie </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Monkey </td>\n   <td style=\"text-align:left;\"> monkey </td>\n   <td style=\"text-align:left;\"> monkey </td>\n   <td style=\"text-align:left;\"> monkey </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n\n## All the `JOIN`s\n\nRecall that **SQL** is a query language that works on *relational databases*. One of its major strengths is being able to efficiently store information in separate tables that can be easily connected as needed.  The syntax for tying together information from multiple tables is done with a `JOIN` clause.  \n\nEach `JOIN` clause needs four specific pieces of information:\n\n1. The name of the first table you want to `JOIN`.\n2. The type of `JOIN` being used.\n3. The name of the second table you want to `JOIN`.\n4. The condition(s) under which you want the records in the first table to match records in the second table.\n\nSome types of `JOIN`s available in **MySQL** include the following, which are represented as Venn diagrams in @fig-venn-joins.\n\n* `JOIN`: include all of the rows that exist in both tables (similar to `inner_join()` in **R**, the intersection of the two tables).  `INNER JOIN` is alternative, and identical, function to `JOIN`.\n* `LEFT JOIN`: include all of the rows in the first table.  Connect them, as much as possible, to the rows in the second table.  Rows that have no match in the second table will have a value of `NULL` for the new \"second table\" variables.\n* `RIGHT JOIN`: include all of the rows in the second table.  Connect them, as much as possible, to the rows in the first table.  Rows that have no match in the first table will have a value of `NULL` for the new \"first table\" variables.  A `RIGHT JOIN` with the tables in the opposite order is the same as a `LEFT JOIN` with the tables in the original order.\n* `FULL OUTER JOIN`: include all rows in either table.  Rows that have no match in the other table will have a value of `NULL` for the other table variables. (similar to `full_join()` in **R**, the union of the two tables).  The functionality doesn't exist in **MySQL** but can be created using joins and `UNION`.\n* `CROSS JOIN`: match each row of the first table with each row in the second table. \n\n\n@fig-venn-joins shows Venn diagrams of the different types of joins.  @fig-table-joins shows four of the `JOIN` functions with mini data tables.  Note that in **SQL** the missing values will be labeled as `NULL` (not `NA`).\n\n\n::: {.cell fig.asp='0.618'}\n::: {.cell-output-display}\n![Venn diagrams describing different JOINs, image credit: phoenixNAP https://phoenixnap.com/kb/mysql-join](images/join-types.png){#fig-venn-joins fig-alt='Venn diagrams describing different types of JOINs.' width=70%}\n:::\n:::\n\n::: {.cell fig.asp='0.618'}\n::: {.cell-output-display}\n![Mini data tables describing different JOINs, image credit: Statistics Globe blog, https://statisticsglobe.com/r-dplyr-join-inner-left-right-full-semi-anti](images/table-joins.png){#fig-table-joins fig-alt='Mini data tables describing different types of JOINs.' width=70%}\n:::\n:::\n\n\n### A toy example\n\nWe will head to **R** for just a minute so as to understand joins using a small toy dataset on rock bands from the 60s, The Beatles and The Rolling Stones.  The function `sqldf()` in the **sqldf** **R** package allows for **SQL** commands on **R** objects.\n\nConsider the following datasets which are available in the **dplyr** package.\n\n\n::: {.cell fig.asp='0.618'}\n\n```{.r .cell-code}\nband_members\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n  name  band   \n  <chr> <chr>  \n1 Mick  Stones \n2 John  Beatles\n3 Paul  Beatles\n```\n:::\n\n```{.r .cell-code}\nband_instruments\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n  name  plays \n  <chr> <chr> \n1 John  guitar\n2 Paul  bass  \n3 Keith guitar\n```\n:::\n:::\n\n#### Inner join {-}\n\nAn inner join combines two datasets returning only the observations that exist in both of the original datasets.\n\n\n::: {.cell fig.asp='0.618'}\n\n```{.r .cell-code}\nsqldf::sqldf(\"SELECT star.name,\n                     star.band,\n                     inst.plays\n              FROM band_members AS star\n              JOIN band_instruments AS inst ON star.name = inst.name\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  name    band  plays\n1 John Beatles guitar\n2 Paul Beatles   bass\n```\n:::\n:::\n\n\n\n#### Full join {-}\n\nA full join combines two datasets returning every observation that exists in either one of the original datasets.  Note that in the results, Mick's instrument is missing, and Keith's band is missing.\n\nThe `full_join()` function does not have an equivalent in **MySQL**.  See @sec-full-union for using `JOIN`s and `UNION`s to produce a full join.\n\n\n::: {.cell fig.asp='0.618'}\n\n```{.r .cell-code}\nband_members |>\n  full_join(band_instruments)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 3\n  name  band    plays \n  <chr> <chr>   <chr> \n1 Mick  Stones  <NA>  \n2 John  Beatles guitar\n3 Paul  Beatles bass  \n4 Keith <NA>    guitar\n```\n:::\n:::\n\n\n#### Left join {-}\n\nA left join combines two datasets returning every observation that exists in the left (or first) original dataset.  Note that in the results, Mick's instrument is missing.\n\n\n::: {.cell fig.asp='0.618'}\n\n```{.r .cell-code}\nsqldf::sqldf(\"SELECT star.name,\n                     star.band,\n                      inst.plays\n              FROM band_members AS star\n              LEFT JOIN band_instruments AS inst \n              ON star.name = inst.name\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  name    band  plays\n1 Mick  Stones   <NA>\n2 John Beatles guitar\n3 Paul Beatles   bass\n```\n:::\n:::\n\n\n\n#### Right join {-}\n\nA right join combines two datasets returning every observation that exists in the right (or second) original dataset. Note that in the results, Keith's band is missing.\n\n\n::: {.cell fig.asp='0.618'}\n\n```{.r .cell-code}\nsqldf::sqldf(\"SELECT inst.name,\n                     star.band,\n                      inst.plays\n              FROM band_members AS star\n              RIGHT JOIN band_instruments AS inst \n              ON star.name = inst.name\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   name    band  plays\n1  John Beatles guitar\n2  Paul Beatles   bass\n3 Keith    <NA> guitar\n```\n:::\n:::\n\n\n### `JOIN`\n\nIn the `imdb` database, the `title` table includes information about the 4,626,322  titles in the database, including the `id`, `title`, `kind_id` (indicator for the kind of ID it is), and `production_year`.  It does not, however, include the review of the title.  See @tbl-title-glance.\n\n\n::: {.cell output.var='title_glance' fig.asp='0.618'}\n\n```{.sql .cell-code}\nSELECT * FROM title LIMIT 0, 10;\n```\n:::\n\n::: {#tbl-title-glance .cell tbl-cap='SELECT to glance at the title table in the imdb database.' fig.asp='0.618'}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-condensed\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> id </th>\n   <th style=\"text-align:left;\"> title </th>\n   <th style=\"text-align:left;\"> imdb_index </th>\n   <th style=\"text-align:right;\"> kind_id </th>\n   <th style=\"text-align:right;\"> production_year </th>\n   <th style=\"text-align:right;\"> imdb_id </th>\n   <th style=\"text-align:left;\"> phonetic_code </th>\n   <th style=\"text-align:right;\"> episode_of_id </th>\n   <th style=\"text-align:right;\"> season_nr </th>\n   <th style=\"text-align:right;\"> episode_nr </th>\n   <th style=\"text-align:left;\"> series_years </th>\n   <th style=\"text-align:left;\"> md5sum </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 78460 </td>\n   <td style=\"text-align:left;\"> Adults Recat to the Simpsons (30th Anniversary) </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:right;\"> 2017 </td>\n   <td style=\"text-align:right;\">  </td>\n   <td style=\"text-align:left;\"> A3432 </td>\n   <td style=\"text-align:right;\"> 78406 </td>\n   <td style=\"text-align:right;\">  </td>\n   <td style=\"text-align:right;\">  </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:left;\"> 2ae09eed7d576cc2c24774fed5b18168 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 70273 </td>\n   <td style=\"text-align:left;\"> (2016-05-18) </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:right;\"> 2016 </td>\n   <td style=\"text-align:right;\">  </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:right;\"> 68058 </td>\n   <td style=\"text-align:right;\">  </td>\n   <td style=\"text-align:right;\">  </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:left;\"> 511dfc14cfff7589d29a95abb30cd66a </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 60105 </td>\n   <td style=\"text-align:left;\"> (2014-04-11) </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:right;\"> 2014 </td>\n   <td style=\"text-align:right;\">  </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:right;\"> 59138 </td>\n   <td style=\"text-align:right;\">  </td>\n   <td style=\"text-align:right;\">  </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:left;\"> c6cdce7e667e07713e431805c407feed </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 32120 </td>\n   <td style=\"text-align:left;\"> (2008-05-01) </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:right;\"> 2008 </td>\n   <td style=\"text-align:right;\">  </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:right;\"> 32060 </td>\n   <td style=\"text-align:right;\">  </td>\n   <td style=\"text-align:right;\">  </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:left;\"> 100df65742caf5afd092b2e0ead67d8e </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 97554 </td>\n   <td style=\"text-align:left;\"> SchmÃ¶lders Traum </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:right;\"> 2001 </td>\n   <td style=\"text-align:right;\">  </td>\n   <td style=\"text-align:left;\"> S2543 </td>\n   <td style=\"text-align:right;\"> 97302 </td>\n   <td style=\"text-align:right;\"> 10 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:left;\"> 46862a2f96f9fb2d59e8c9a11ecfdd28 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 57966 </td>\n   <td style=\"text-align:left;\"> (#1.1) </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:right;\"> 2013 </td>\n   <td style=\"text-align:right;\">  </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:right;\"> 57965 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:left;\"> 409c37703766c4b24f8a86162fd9cf85 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 76391 </td>\n   <td style=\"text-align:left;\"> Anniversary </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:right;\"> 1971 </td>\n   <td style=\"text-align:right;\">  </td>\n   <td style=\"text-align:left;\"> A5162 </td>\n   <td style=\"text-align:right;\"> 76385 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 9 </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:left;\"> 5e12ce73fac1d1dcf94136b6e9acd8f8 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 11952 </td>\n   <td style=\"text-align:left;\"> Angus Black/Lester Barrie/DC Curry </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:right;\"> 2009 </td>\n   <td style=\"text-align:right;\">  </td>\n   <td style=\"text-align:left;\"> A5214 </td>\n   <td style=\"text-align:right;\"> 11937 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:left;\"> 9c38b9e5601dc154444b73b518034aa1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 1554 </td>\n   <td style=\"text-align:left;\"> New Orleans </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:right;\"> 2003 </td>\n   <td style=\"text-align:right;\">  </td>\n   <td style=\"text-align:left;\"> N6452 </td>\n   <td style=\"text-align:right;\"> 1508 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 11 </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:left;\"> 621bea735740a547e862e4a3226f35d2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 58442 </td>\n   <td style=\"text-align:left;\"> Kiss Me Kate </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:right;\"> 2011 </td>\n   <td style=\"text-align:right;\">  </td>\n   <td style=\"text-align:left;\"> K2523 </td>\n   <td style=\"text-align:right;\"> 58436 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 10 </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:left;\"> 293e8c75c7f35a4035abf617962be5a9 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\nThe `movie_info_idx` table does not contain much information about each particular film.  It does, however, have an indicator for the movie ID (given by `movie_id`) as well as the number of votes (given by `info` where `type_id = 100`).  See @tbl-idx-glance.\n\n\n::: {.cell output.var='idx_glance' fig.asp='0.618'}\n\n```{.sql .cell-code}\nSELECT * FROM movie_info_idx LIMIT 0, 6;\n```\n:::\n\n::: {#tbl-idx-glance .cell tbl-cap='SELECT to glance at the movie_info_idx table in the imdb database.' fig.asp='0.618'}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-condensed\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> id </th>\n   <th style=\"text-align:right;\"> movie_id </th>\n   <th style=\"text-align:right;\"> info_type_id </th>\n   <th style=\"text-align:left;\"> info </th>\n   <th style=\"text-align:left;\"> note </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 99 </td>\n   <td style=\"text-align:left;\"> 31.2.1..2. </td>\n   <td style=\"text-align:left;\">  </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 100 </td>\n   <td style=\"text-align:left;\"> 9 </td>\n   <td style=\"text-align:left;\">  </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 101 </td>\n   <td style=\"text-align:left;\"> 4.1 </td>\n   <td style=\"text-align:left;\">  </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 99 </td>\n   <td style=\"text-align:left;\"> 1000000102 </td>\n   <td style=\"text-align:left;\">  </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 5 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 100 </td>\n   <td style=\"text-align:left;\"> 61 </td>\n   <td style=\"text-align:left;\">  </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 6 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 101 </td>\n   <td style=\"text-align:left;\"> 6.4 </td>\n   <td style=\"text-align:left;\">  </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\nLet's say we want to combine the titles with the number of votes so that each title with user votes is included.  That is, only keep the titles that have a corresponding votes.  And also, only keep the votes if there is an associated title (which means we use `INNER JOIN` or just plain `JOIN`).\n\nRemember that `WHERE` will work on the raw variables, and `HAVING` works on the results set.  \n\nSome aspects of the query are worth pointing out:  \n* The variables in the output are given in the `SELECT` clause.  The `id` and `title` (both from the `title` table) and the `info` from the `movie_info_idx` which represents the number of IMDb votes.\n* The variables are preceded by the table from which they came. While not always necessary, it is good practice so as to avoid confusion.\n* The `JOIN` happens by linking the `id` variable in the `title` table with the `movie_id` variable in the `movie_info_idx` table.\n* The `LIMIT` wasn't necessary (there are only 12 observations), but it's good practice so that we don't end up with unwieldy query results.\n* The `WHERE` clause happens before the `JOIN` action, despite being written after.\n* In the `WHERE` clause, we keep only movies, only 2015 production year, and only at least 150,000 votes.\n\n\n::: {.cell output.var='movie_join' fig.asp='0.618'}\n\n```{.sql .cell-code}\nSELECT title.id,\n       title.title,\n       movie_info_idx.info\nFROM title\nJOIN movie_info_idx ON title.id = movie_info_idx.movie_id \nWHERE title.production_year = 2015 \n    AND title.kind_id = 1                  # movies only\n    AND movie_info_idx.info_type_id = 100  # info_type is votes\n    AND movie_info_idx.info > 150000       # at least 150,000 votes\nORDER BY movie_info_idx.info DESC\nLIMIT 0, 20;\n\n```\n:::\n\n::: {#tbl-movie-join .cell tbl-cap='Movies from 2015 that have at least 150,000 votes in the imdb database.' fig.asp='0.618'}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-condensed\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> id </th>\n   <th style=\"text-align:left;\"> title </th>\n   <th style=\"text-align:left;\"> info </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 4260166 </td>\n   <td style=\"text-align:left;\"> Star Wars: Episode VII - The Force Awakens </td>\n   <td style=\"text-align:left;\"> 691691 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3915213 </td>\n   <td style=\"text-align:left;\"> Mad Max: Fury Road </td>\n   <td style=\"text-align:left;\"> 666484 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 4389619 </td>\n   <td style=\"text-align:left;\"> The Martian </td>\n   <td style=\"text-align:left;\"> 583987 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3313672 </td>\n   <td style=\"text-align:left;\"> Avengers: Age of Ultron </td>\n   <td style=\"text-align:left;\"> 540606 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 4414139 </td>\n   <td style=\"text-align:left;\"> The Revenant </td>\n   <td style=\"text-align:left;\"> 526189 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3787790 </td>\n   <td style=\"text-align:left;\"> Jurassic World </td>\n   <td style=\"text-align:left;\"> 471237 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3752999 </td>\n   <td style=\"text-align:left;\"> Inside Out </td>\n   <td style=\"text-align:left;\"> 443051 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3292159 </td>\n   <td style=\"text-align:left;\"> Ant-Man </td>\n   <td style=\"text-align:left;\"> 390965 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 4364483 </td>\n   <td style=\"text-align:left;\"> The Hateful Eight </td>\n   <td style=\"text-align:left;\"> 363199 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 4251736 </td>\n   <td style=\"text-align:left;\"> Spectre </td>\n   <td style=\"text-align:left;\"> 319875 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3630368 </td>\n   <td style=\"text-align:left;\"> Furious Seven </td>\n   <td style=\"text-align:left;\"> 310970 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 4255450 </td>\n   <td style=\"text-align:left;\"> Spotlight </td>\n   <td style=\"text-align:left;\"> 290362 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3961438 </td>\n   <td style=\"text-align:left;\"> Mission: Impossible - Rogue Nation </td>\n   <td style=\"text-align:left;\"> 266759 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 4321769 </td>\n   <td style=\"text-align:left;\"> The Big Short </td>\n   <td style=\"text-align:left;\"> 262598 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 4221220 </td>\n   <td style=\"text-align:left;\"> Sicario </td>\n   <td style=\"text-align:left;\"> 260996 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3600120 </td>\n   <td style=\"text-align:left;\"> Fifty Shades of Grey </td>\n   <td style=\"text-align:left;\"> 250962 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 4164324 </td>\n   <td style=\"text-align:left;\"> Room </td>\n   <td style=\"text-align:left;\"> 244210 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3379559 </td>\n   <td style=\"text-align:left;\"> Bridge of Spies </td>\n   <td style=\"text-align:left;\"> 229440 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 4368666 </td>\n   <td style=\"text-align:left;\"> The Hunger Games: Mockingjay - Part 2 </td>\n   <td style=\"text-align:left;\"> 214569 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 4387967 </td>\n   <td style=\"text-align:left;\"> The Man from U.N.C.L.E. </td>\n   <td style=\"text-align:left;\"> 213754 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\nLet's say we also want to obtain information about the actors and actresses in each of the movies.  In the `cast_info` table, there is a `person_id`, a `movie_id`, and `person_role_id` is `1` if actor and `2` if actress.\n\n\n::: {.cell output.var='cast_glance' fig.asp='0.618'}\n\n```{.sql .cell-code}\nSELECT * FROM cast_info LIMIT 0, 10;\n\n```\n:::\n\n::: {#tbl-cast-glance .cell tbl-cap='SELECT to glance at the cast_info table in the imdb database.' fig.asp='0.618'}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-condensed\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> id </th>\n   <th style=\"text-align:right;\"> person_id </th>\n   <th style=\"text-align:right;\"> movie_id </th>\n   <th style=\"text-align:right;\"> person_role_id </th>\n   <th style=\"text-align:left;\"> note </th>\n   <th style=\"text-align:right;\"> nr_order </th>\n   <th style=\"text-align:right;\"> role_id </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 3432997 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:right;\"> 31 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 1901690 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:right;\">  </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 4027567 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:right;\"> 25 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 4282876 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:right;\"> 22 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 5 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 3542672 </td>\n   <td style=\"text-align:right;\">  </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:right;\"> 12 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 6 </td>\n   <td style=\"text-align:right;\"> 5 </td>\n   <td style=\"text-align:right;\"> 3331520 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:left;\"> (as $hutter Boy) </td>\n   <td style=\"text-align:right;\"> 10 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:right;\"> 5 </td>\n   <td style=\"text-align:right;\"> 4027191 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:left;\"> (as $hutter Boy) </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 8 </td>\n   <td style=\"text-align:right;\"> 5 </td>\n   <td style=\"text-align:right;\"> 4195731 </td>\n   <td style=\"text-align:right;\"> 5 </td>\n   <td style=\"text-align:left;\"> (uncredited) </td>\n   <td style=\"text-align:right;\">  </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 9 </td>\n   <td style=\"text-align:right;\"> 5 </td>\n   <td style=\"text-align:right;\"> 4263956 </td>\n   <td style=\"text-align:right;\"> 6 </td>\n   <td style=\"text-align:left;\"> (uncredited) </td>\n   <td style=\"text-align:right;\">  </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 10 </td>\n   <td style=\"text-align:right;\"> 5 </td>\n   <td style=\"text-align:right;\"> 4267787 </td>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:left;\"> (uncredited) </td>\n   <td style=\"text-align:right;\">  </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\nWe also want the name of the actress which is in the table `aka_name`.  Note that there is no *movie* information in the `aka_name` table!\n\n\n::: {.cell output.var='name_glance' fig.asp='0.618'}\n\n```{.sql .cell-code}\nSELECT * FROM aka_name LIMIT 0, 10;\n\n```\n:::\n\n::: {#tbl-name-glance .cell tbl-cap='SELECT to glance at the aka_name table in the imdb database.' fig.asp='0.618'}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-condensed\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> id </th>\n   <th style=\"text-align:right;\"> person_id </th>\n   <th style=\"text-align:left;\"> name </th>\n   <th style=\"text-align:left;\"> imdb_index </th>\n   <th style=\"text-align:left;\"> name_pcode_cf </th>\n   <th style=\"text-align:left;\"> name_pcode_nf </th>\n   <th style=\"text-align:left;\"> surname_pcode </th>\n   <th style=\"text-align:left;\"> md5sum </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 6188450 </td>\n   <td style=\"text-align:left;\"> Smith, Jessica Noel </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:left;\"> S5325 </td>\n   <td style=\"text-align:left;\"> J2542 </td>\n   <td style=\"text-align:left;\"> S53 </td>\n   <td style=\"text-align:left;\"> 25c9d464e3ff2957533546aa92b397ed </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 5125059 </td>\n   <td style=\"text-align:left;\"> Pain, L. $ham </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:left;\"> P545 </td>\n   <td style=\"text-align:left;\"> L515 </td>\n   <td style=\"text-align:left;\"> P5 </td>\n   <td style=\"text-align:left;\"> 569b1e885ccb51211c01753f0dad9b2c </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 5 </td>\n   <td style=\"text-align:left;\"> Boy, $hutter </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:left;\"> B36 </td>\n   <td style=\"text-align:left;\"> H361 </td>\n   <td style=\"text-align:left;\"> B </td>\n   <td style=\"text-align:left;\"> 35092b5604ce378fc48c8a6fc0038a49 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 4152053 </td>\n   <td style=\"text-align:left;\"> Dollasign, Ty </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:left;\"> D4253 </td>\n   <td style=\"text-align:left;\"> T3425 </td>\n   <td style=\"text-align:left;\"> D425 </td>\n   <td style=\"text-align:left;\"> 0f565a2d8027cfb8ed6c5f4bba719fcd </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 5 </td>\n   <td style=\"text-align:right;\"> 4152053 </td>\n   <td style=\"text-align:left;\"> Sign, Ty Dolla </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:left;\"> S2534 </td>\n   <td style=\"text-align:left;\"> T3425 </td>\n   <td style=\"text-align:left;\"> S25 </td>\n   <td style=\"text-align:left;\"> 2eded1b021b96333b4b74e0fec959650 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 6 </td>\n   <td style=\"text-align:right;\"> 6 </td>\n   <td style=\"text-align:left;\"> Moore, Brandon </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:left;\"> M6165 </td>\n   <td style=\"text-align:left;\"> B6535 </td>\n   <td style=\"text-align:left;\"> M6 </td>\n   <td style=\"text-align:left;\"> 193a6f5adf4756320f622162d2475608 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:right;\"> 8 </td>\n   <td style=\"text-align:left;\"> $torm, Country </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:left;\"> T6525 </td>\n   <td style=\"text-align:left;\"> C5363 </td>\n   <td style=\"text-align:left;\"> T65 </td>\n   <td style=\"text-align:left;\"> 1654400b707d34323ea392b87060e6cc </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 8 </td>\n   <td style=\"text-align:right;\"> 19 </td>\n   <td style=\"text-align:left;\"> 'Hooper', Simon P.J. Kelly </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:left;\"> H1625 </td>\n   <td style=\"text-align:left;\"> S5124 </td>\n   <td style=\"text-align:left;\"> H16 </td>\n   <td style=\"text-align:left;\"> 3fd8885372c23f8c74e583da91d1fd05 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 9 </td>\n   <td style=\"text-align:right;\"> 19 </td>\n   <td style=\"text-align:left;\"> Hooper </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:left;\"> H16 </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:left;\"> 24ddc68ab605ee95857ad45b65ffa2d8 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 10 </td>\n   <td style=\"text-align:right;\"> 19 </td>\n   <td style=\"text-align:left;\"> Kelly, Simon P.J. </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:left;\"> K4251 </td>\n   <td style=\"text-align:left;\"> S5124 </td>\n   <td style=\"text-align:left;\"> K4 </td>\n   <td style=\"text-align:left;\"> 33d976f22e276b73c61513bc5f6e72a6 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\nConnecting the most popular movies of 2015 with the actresses in those movies requires a series of `JOIN`s. Note that to make the code less onerous, the `title` table has been aliased by `t`, the `movie_info_idx` table has been aliased by `idx`, the `cast_info` table has been aliased by `a`, and the `aka_name` table has been aliased by `n`.\n\nThere is a lot of data cleaning to do as some of the `person_id` values are one to many!!  That is, the `person_id` matches multiple names in the `aka_name` database.\n\n\n\n::: {.cell output.var='movie_join_actress' fig.asp='0.618'}\n\n```{.sql .cell-code}\nSELECT t.title,\n       idx.info,\n       a.person_id,\n       n.name\nFROM title AS t\nJOIN movie_info_idx AS idx ON t.id = idx.movie_id \nJOIN cast_info AS a ON idx.movie_id = a.movie_id\nJOIN aka_name AS n ON a.person_id = n.person_id\nWHERE t.production_year = 2015 \n    AND t.kind_id = 1           # movies only\n    AND idx.info_type_id = 100  # info_type is votes\n    AND idx.info > 150000       # at least 150,000 votes\n    AND a.role_id = 2           # actresses only\nORDER BY idx.info DESC\nLIMIT 0, 50;\n```\n:::\n\n::: {#tbl-movie-join-actress .cell tbl-cap='Movies from 2015 that have at least 150,000 votes in the imdb database with the actress name joined.' fig.asp='0.618'}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-condensed\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> title </th>\n   <th style=\"text-align:left;\"> info </th>\n   <th style=\"text-align:right;\"> person_id </th>\n   <th style=\"text-align:left;\"> name </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Star Wars: Episode VII - The Force Awakens </td>\n   <td style=\"text-align:left;\"> 691691 </td>\n   <td style=\"text-align:right;\"> 2698188 </td>\n   <td style=\"text-align:left;\"> Sam </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Star Wars: Episode VII - The Force Awakens </td>\n   <td style=\"text-align:left;\"> 691691 </td>\n   <td style=\"text-align:right;\"> 2806101 </td>\n   <td style=\"text-align:left;\"> Gillespie, Hilary Catherine </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Star Wars: Episode VII - The Force Awakens </td>\n   <td style=\"text-align:left;\"> 691691 </td>\n   <td style=\"text-align:right;\"> 2959609 </td>\n   <td style=\"text-align:left;\"> Cuzner, Natalie </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Star Wars: Episode VII - The Force Awakens </td>\n   <td style=\"text-align:left;\"> 691691 </td>\n   <td style=\"text-align:right;\"> 3089483 </td>\n   <td style=\"text-align:left;\"> Fisher, Carrie Frances </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Star Wars: Episode VII - The Force Awakens </td>\n   <td style=\"text-align:left;\"> 691691 </td>\n   <td style=\"text-align:right;\"> 3150880 </td>\n   <td style=\"text-align:left;\"> Class, Clare </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Star Wars: Episode VII - The Force Awakens </td>\n   <td style=\"text-align:left;\"> 691691 </td>\n   <td style=\"text-align:right;\"> 3150880 </td>\n   <td style=\"text-align:left;\"> Glass, Claire </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Star Wars: Episode VII - The Force Awakens </td>\n   <td style=\"text-align:left;\"> 691691 </td>\n   <td style=\"text-align:right;\"> 3231758 </td>\n   <td style=\"text-align:left;\"> Henwick, Jessica Yu Li </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Star Wars: Episode VII - The Force Awakens </td>\n   <td style=\"text-align:left;\"> 691691 </td>\n   <td style=\"text-align:right;\"> 3265686 </td>\n   <td style=\"text-align:left;\"> Hui, Karen </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Star Wars: Episode VII - The Force Awakens </td>\n   <td style=\"text-align:left;\"> 691691 </td>\n   <td style=\"text-align:right;\"> 3305561 </td>\n   <td style=\"text-align:left;\"> Kamen, Hannah John </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Star Wars: Episode VII - The Force Awakens </td>\n   <td style=\"text-align:left;\"> 691691 </td>\n   <td style=\"text-align:right;\"> 3462940 </td>\n   <td style=\"text-align:left;\"> Billy </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Star Wars: Episode VII - The Force Awakens </td>\n   <td style=\"text-align:left;\"> 691691 </td>\n   <td style=\"text-align:right;\"> 3462940 </td>\n   <td style=\"text-align:left;\"> Lourd, Billie Catherine </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Star Wars: Episode VII - The Force Awakens </td>\n   <td style=\"text-align:left;\"> 691691 </td>\n   <td style=\"text-align:right;\"> 3569409 </td>\n   <td style=\"text-align:left;\"> Fran </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Star Wars: Episode VII - The Force Awakens </td>\n   <td style=\"text-align:left;\"> 691691 </td>\n   <td style=\"text-align:right;\"> 3649948 </td>\n   <td style=\"text-align:left;\"> Nyongo, Lupita </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Star Wars: Episode VII - The Force Awakens </td>\n   <td style=\"text-align:left;\"> 691691 </td>\n   <td style=\"text-align:right;\"> 3649948 </td>\n   <td style=\"text-align:left;\"> Nyong'o, Lupita Amondi </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Star Wars: Episode VII - The Force Awakens </td>\n   <td style=\"text-align:left;\"> 691691 </td>\n   <td style=\"text-align:right;\"> 3785240 </td>\n   <td style=\"text-align:left;\"> Ridley, Daisy Jazz Isobel </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Star Wars: Episode VII - The Force Awakens </td>\n   <td style=\"text-align:left;\"> 691691 </td>\n   <td style=\"text-align:right;\"> 3835377 </td>\n   <td style=\"text-align:left;\"> Giagrande, Meredith J. </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Star Wars: Episode VII - The Force Awakens </td>\n   <td style=\"text-align:left;\"> 691691 </td>\n   <td style=\"text-align:right;\"> 3835377 </td>\n   <td style=\"text-align:left;\"> Salinger, Meredith </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Star Wars: Episode VII - The Force Awakens </td>\n   <td style=\"text-align:left;\"> 691691 </td>\n   <td style=\"text-align:right;\"> 3835377 </td>\n   <td style=\"text-align:left;\"> Salenger, Meredith Dawn </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Star Wars: Episode VII - The Force Awakens </td>\n   <td style=\"text-align:left;\"> 691691 </td>\n   <td style=\"text-align:right;\"> 3850834 </td>\n   <td style=\"text-align:left;\"> Phi </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Star Wars: Episode VII - The Force Awakens </td>\n   <td style=\"text-align:left;\"> 691691 </td>\n   <td style=\"text-align:right;\"> 3875581 </td>\n   <td style=\"text-align:left;\"> Fox, Claudia </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Star Wars: Episode VII - The Force Awakens </td>\n   <td style=\"text-align:left;\"> 691691 </td>\n   <td style=\"text-align:right;\"> 3879039 </td>\n   <td style=\"text-align:left;\"> Arti </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Star Wars: Episode VII - The Force Awakens </td>\n   <td style=\"text-align:left;\"> 691691 </td>\n   <td style=\"text-align:right;\"> 3907812 </td>\n   <td style=\"text-align:left;\"> Slade, Sandy </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Star Wars: Episode VII - The Force Awakens </td>\n   <td style=\"text-align:left;\"> 691691 </td>\n   <td style=\"text-align:right;\"> 3907812 </td>\n   <td style=\"text-align:left;\"> Sandy </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Star Wars: Episode VII - The Force Awakens </td>\n   <td style=\"text-align:left;\"> 691691 </td>\n   <td style=\"text-align:right;\"> 3907812 </td>\n   <td style=\"text-align:left;\"> Sandy Slade </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Star Wars: Episode VII - The Force Awakens </td>\n   <td style=\"text-align:left;\"> 691691 </td>\n   <td style=\"text-align:right;\"> 3938795 </td>\n   <td style=\"text-align:left;\"> Ryan, Karol Lesley </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Star Wars: Episode VII - The Force Awakens </td>\n   <td style=\"text-align:left;\"> 691691 </td>\n   <td style=\"text-align:right;\"> 3970637 </td>\n   <td style=\"text-align:left;\"> Stevens, Cat </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Star Wars: Episode VII - The Force Awakens </td>\n   <td style=\"text-align:left;\"> 691691 </td>\n   <td style=\"text-align:right;\"> 3970637 </td>\n   <td style=\"text-align:left;\"> Taber, Cat </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Star Wars: Episode VII - The Force Awakens </td>\n   <td style=\"text-align:left;\"> 691691 </td>\n   <td style=\"text-align:right;\"> 3970637 </td>\n   <td style=\"text-align:left;\"> Tabor, Cat </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Star Wars: Episode VII - The Force Awakens </td>\n   <td style=\"text-align:left;\"> 691691 </td>\n   <td style=\"text-align:right;\"> 3970637 </td>\n   <td style=\"text-align:left;\"> Cat </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Star Wars: Episode VII - The Force Awakens </td>\n   <td style=\"text-align:left;\"> 691691 </td>\n   <td style=\"text-align:right;\"> 3970637 </td>\n   <td style=\"text-align:left;\"> Stevens, Cat </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Star Wars: Episode VII - The Force Awakens </td>\n   <td style=\"text-align:left;\"> 691691 </td>\n   <td style=\"text-align:right;\"> 3970637 </td>\n   <td style=\"text-align:left;\"> Taber, Cat </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Star Wars: Episode VII - The Force Awakens </td>\n   <td style=\"text-align:left;\"> 691691 </td>\n   <td style=\"text-align:right;\"> 3970637 </td>\n   <td style=\"text-align:left;\"> Tabor, Cat </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Star Wars: Episode VII - The Force Awakens </td>\n   <td style=\"text-align:left;\"> 691691 </td>\n   <td style=\"text-align:right;\"> 3970637 </td>\n   <td style=\"text-align:left;\"> Cat </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Star Wars: Episode VII - The Force Awakens </td>\n   <td style=\"text-align:left;\"> 691691 </td>\n   <td style=\"text-align:right;\"> 4073883 </td>\n   <td style=\"text-align:left;\"> Walter, Dame Harriet </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Star Wars: Episode VII - The Force Awakens </td>\n   <td style=\"text-align:left;\"> 691691 </td>\n   <td style=\"text-align:right;\"> 4073883 </td>\n   <td style=\"text-align:left;\"> Walter, Harriet Mary </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Star Wars: Episode VII - The Force Awakens </td>\n   <td style=\"text-align:left;\"> 691691 </td>\n   <td style=\"text-align:right;\"> 4094732 </td>\n   <td style=\"text-align:left;\"> White, Kelsey Marie </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Mad Max: Fury Road </td>\n   <td style=\"text-align:left;\"> 666484 </td>\n   <td style=\"text-align:right;\"> 2681098 </td>\n   <td style=\"text-align:left;\"> Michelle, Debra </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Mad Max: Fury Road </td>\n   <td style=\"text-align:left;\"> 666484 </td>\n   <td style=\"text-align:right;\"> 2782138 </td>\n   <td style=\"text-align:left;\"> Ali </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Mad Max: Fury Road </td>\n   <td style=\"text-align:left;\"> 666484 </td>\n   <td style=\"text-align:right;\"> 2873752 </td>\n   <td style=\"text-align:left;\"> Cardona, Helena </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Mad Max: Fury Road </td>\n   <td style=\"text-align:left;\"> 666484 </td>\n   <td style=\"text-align:right;\"> 2873752 </td>\n   <td style=\"text-align:left;\"> Cardona, Helene </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Mad Max: Fury Road </td>\n   <td style=\"text-align:left;\"> 666484 </td>\n   <td style=\"text-align:right;\"> 2873752 </td>\n   <td style=\"text-align:left;\"> Cardona, HÃ©lÃ¨ne Vania </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Mad Max: Fury Road </td>\n   <td style=\"text-align:left;\"> 666484 </td>\n   <td style=\"text-align:right;\"> 2957052 </td>\n   <td style=\"text-align:left;\"> Cunico, Lillie </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Mad Max: Fury Road </td>\n   <td style=\"text-align:left;\"> 666484 </td>\n   <td style=\"text-align:right;\"> 3087531 </td>\n   <td style=\"text-align:left;\"> Finlay, Sandi 'Hotrod' </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Mad Max: Fury Road </td>\n   <td style=\"text-align:left;\"> 666484 </td>\n   <td style=\"text-align:right;\"> 3087531 </td>\n   <td style=\"text-align:left;\"> Finlay, Sandi 'Hotrod' </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Mad Max: Fury Road </td>\n   <td style=\"text-align:left;\"> 666484 </td>\n   <td style=\"text-align:right;\"> 3146859 </td>\n   <td style=\"text-align:left;\"> Gilles, Coco Jack </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Mad Max: Fury Road </td>\n   <td style=\"text-align:left;\"> 666484 </td>\n   <td style=\"text-align:right;\"> 3146859 </td>\n   <td style=\"text-align:left;\"> Gillies, Coco </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Mad Max: Fury Road </td>\n   <td style=\"text-align:left;\"> 666484 </td>\n   <td style=\"text-align:right;\"> 3268456 </td>\n   <td style=\"text-align:left;\"> Rose </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Mad Max: Fury Road </td>\n   <td style=\"text-align:left;\"> 666484 </td>\n   <td style=\"text-align:right;\"> 3268456 </td>\n   <td style=\"text-align:left;\"> Huntington-Whiteley, Rosie Alice </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Mad Max: Fury Road </td>\n   <td style=\"text-align:left;\"> 666484 </td>\n   <td style=\"text-align:right;\"> 3343489 </td>\n   <td style=\"text-align:left;\"> Kellerman, Antoinette </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Mad Max: Fury Road </td>\n   <td style=\"text-align:left;\"> 666484 </td>\n   <td style=\"text-align:right;\"> 3348513 </td>\n   <td style=\"text-align:left;\"> Riley </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n\n\n\n### Other `JOIN`s\n\n\nConsider the following two tables.  The first has seven movies in it (from 2015 with at least 400,000 IMDb votes).  The second consists of almost 3 million actresses (`person_role_id = 2`).  In order to find a subset of actresses, the `person_id > 3900000` was set arbitrarily (in order to have a smaller group with which to work).\n\n\n\n#### movies: {-}\n\n\n::: {.cell output.var='top_movies' fig.asp='0.618'}\n\n```{.sql .cell-code}\nSELECT t.id,\n       t.title,\n       idx.info,\n       (SELECT COUNT(*)\n       FROM title AS t\n       JOIN movie_info_idx AS idx ON idx.movie_id = t.id\n       WHERE t.production_year = 2015  \n             AND t.kind_id = 1\n             AND idx.info_type_id = 100\n             AND idx.info > 400000) AS row_count\nFROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year = 2015  \n    AND t.kind_id = 1             # movies only\n    AND idx.info_type_id = 100    # info_type is votes\n    AND idx.info > 400000         # at least 400,000 votes\nORDER BY idx.info DESC\n```\n:::\n\n::: {#tbl-top-movies .cell tbl-cap='Movies from 2015 that have at least 400,000 votes in the imdb database.' fig.asp='0.618'}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-condensed\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> id </th>\n   <th style=\"text-align:left;\"> title </th>\n   <th style=\"text-align:left;\"> info </th>\n   <th style=\"text-align:right;\"> row_count </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 4260166 </td>\n   <td style=\"text-align:left;\"> Star Wars: Episode VII - The Force Awakens </td>\n   <td style=\"text-align:left;\"> 691691 </td>\n   <td style=\"text-align:right;\"> 7 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3915213 </td>\n   <td style=\"text-align:left;\"> Mad Max: Fury Road </td>\n   <td style=\"text-align:left;\"> 666484 </td>\n   <td style=\"text-align:right;\"> 7 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 4389619 </td>\n   <td style=\"text-align:left;\"> The Martian </td>\n   <td style=\"text-align:left;\"> 583987 </td>\n   <td style=\"text-align:right;\"> 7 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3313672 </td>\n   <td style=\"text-align:left;\"> Avengers: Age of Ultron </td>\n   <td style=\"text-align:left;\"> 540606 </td>\n   <td style=\"text-align:right;\"> 7 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 4414139 </td>\n   <td style=\"text-align:left;\"> The Revenant </td>\n   <td style=\"text-align:left;\"> 526189 </td>\n   <td style=\"text-align:right;\"> 7 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3787790 </td>\n   <td style=\"text-align:left;\"> Jurassic World </td>\n   <td style=\"text-align:left;\"> 471237 </td>\n   <td style=\"text-align:right;\"> 7 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3752999 </td>\n   <td style=\"text-align:left;\"> Inside Out </td>\n   <td style=\"text-align:left;\"> 443051 </td>\n   <td style=\"text-align:right;\"> 7 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n#### actresses: {-}\n\n\n::: {.cell output.var='actresses' fig.asp='0.618'}\n\n```{.sql .cell-code}\nSELECT a.person_id,\n       a.movie_id,\n       n.name,\n       (SELECT COUNT(*)\n       FROM cast_info AS a\n       JOIN aka_name AS n ON a.person_id = n.person_id\n       WHERE a.person_role_id = 2  \n             AND a.person_id > 390000) AS row_count\nFROM cast_info AS a\nJOIN aka_name AS n ON a.person_id = n.person_id\n       WHERE a.person_role_id = 2  \n             AND a.person_id > 3900000\nLIMIT 0, 20;\n```\n:::\n\n::: {#tbl-actresses .cell tbl-cap='Actresses whose `person_id` is greater than 400000.  Note that some actresses have different spelling or phrasing of their names.' fig.asp='0.618'}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-condensed\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> person_id </th>\n   <th style=\"text-align:right;\"> movie_id </th>\n   <th style=\"text-align:left;\"> name </th>\n   <th style=\"text-align:right;\"> row_count </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 3900141 </td>\n   <td style=\"text-align:right;\"> 759802 </td>\n   <td style=\"text-align:left;\"> Simons, Rita Joanne </td>\n   <td style=\"text-align:right;\"> 2904759 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3902258 </td>\n   <td style=\"text-align:right;\"> 4365829 </td>\n   <td style=\"text-align:left;\"> Singer, Rabbi Tovia </td>\n   <td style=\"text-align:right;\"> 2904759 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3902699 </td>\n   <td style=\"text-align:right;\"> 3109788 </td>\n   <td style=\"text-align:left;\"> Singh, Sabine Erika </td>\n   <td style=\"text-align:right;\"> 2904759 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3903035 </td>\n   <td style=\"text-align:right;\"> 3215866 </td>\n   <td style=\"text-align:left;\"> Val </td>\n   <td style=\"text-align:right;\"> 2904759 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3904831 </td>\n   <td style=\"text-align:right;\"> 2468067 </td>\n   <td style=\"text-align:left;\"> Masha </td>\n   <td style=\"text-align:right;\"> 2904759 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3904928 </td>\n   <td style=\"text-align:right;\"> 3654347 </td>\n   <td style=\"text-align:left;\"> Fei, Siu Yin </td>\n   <td style=\"text-align:right;\"> 2904759 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3904928 </td>\n   <td style=\"text-align:right;\"> 3654347 </td>\n   <td style=\"text-align:left;\"> Hsiao, Yen-fei </td>\n   <td style=\"text-align:right;\"> 2904759 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3904928 </td>\n   <td style=\"text-align:right;\"> 3654347 </td>\n   <td style=\"text-align:left;\"> Siu, Yinfei </td>\n   <td style=\"text-align:right;\"> 2904759 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3904928 </td>\n   <td style=\"text-align:right;\"> 3654347 </td>\n   <td style=\"text-align:left;\"> Xiao, Yanfei </td>\n   <td style=\"text-align:right;\"> 2904759 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3904928 </td>\n   <td style=\"text-align:right;\"> 3654347 </td>\n   <td style=\"text-align:left;\"> Yin-Fai, Siu </td>\n   <td style=\"text-align:right;\"> 2904759 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3905289 </td>\n   <td style=\"text-align:right;\"> 115191 </td>\n   <td style=\"text-align:left;\"> Coso, Cosondra </td>\n   <td style=\"text-align:right;\"> 2904759 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3905289 </td>\n   <td style=\"text-align:right;\"> 115191 </td>\n   <td style=\"text-align:left;\"> Sjostrom, Cossondra </td>\n   <td style=\"text-align:right;\"> 2904759 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3905289 </td>\n   <td style=\"text-align:right;\"> 115191 </td>\n   <td style=\"text-align:left;\"> Coso </td>\n   <td style=\"text-align:right;\"> 2904759 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3909355 </td>\n   <td style=\"text-align:right;\"> 2939100 </td>\n   <td style=\"text-align:left;\"> SlovÃ¡ckovÃ¡, Anna Julie </td>\n   <td style=\"text-align:right;\"> 2904759 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3911826 </td>\n   <td style=\"text-align:right;\"> 4379610 </td>\n   <td style=\"text-align:left;\"> Meador, Constance June </td>\n   <td style=\"text-align:right;\"> 2904759 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3912134 </td>\n   <td style=\"text-align:right;\"> 2675144 </td>\n   <td style=\"text-align:left;\"> DJ </td>\n   <td style=\"text-align:right;\"> 2904759 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3912134 </td>\n   <td style=\"text-align:right;\"> 2675144 </td>\n   <td style=\"text-align:left;\"> Smith, DJ </td>\n   <td style=\"text-align:right;\"> 2904759 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3912134 </td>\n   <td style=\"text-align:right;\"> 2675144 </td>\n   <td style=\"text-align:left;\"> Smith, Dujonette </td>\n   <td style=\"text-align:right;\"> 2904759 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3912134 </td>\n   <td style=\"text-align:right;\"> 2675144 </td>\n   <td style=\"text-align:left;\"> DJ Smith </td>\n   <td style=\"text-align:right;\"> 2904759 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3913519 </td>\n   <td style=\"text-align:right;\"> 1678444 </td>\n   <td style=\"text-align:left;\"> Keely, Dorothy Jacqueline </td>\n   <td style=\"text-align:right;\"> 2904759 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n\n\nUsing subqueries, we can `JOIN` the two datasets using different `JOIN` techniques.\n\n\n#### Inner `JOIN` {-}\n\nWith an inner `JOIN`, there are 32 rows corresponding to all the actresses in the seven 2015 films with the most votes.  Because the `JOIN` is an intersection of the two tables, only the actresses with `person_id` above 3900000 are included.\n\n\n::: {.cell output.var='inner_movie_actress' fig.asp='0.618'}\n\n```{.sql .cell-code}\n\nSELECT * FROM\n(SELECT t.id,\n       t.title\nFROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year = 2015  \n    AND t.kind_id = 1               # movies only\n    AND idx.info_type_id = 100      # info_type is votes\n    AND idx.info > 400000) AS movs  # at least 400,000 votes     \nINNER JOIN (SELECT a.person_id,\n       a.movie_id,\n       n.name\n    FROM cast_info AS a\n    JOIN aka_name AS n ON a.person_id = n.person_id\n    WHERE a.role_id = 2             # acresses only\n        AND a.person_id > 3900000) AS acts ON acts.movie_id = movs.id\nLIMIT 0, 300;\n\n```\n:::\n\n::: {#tbl-inner-movie-actress .cell tbl-cap='Inner `JOIN` of movies and actresses.' fig.asp='0.618'}\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-9ac63b637de07b869efd\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-9ac63b637de07b869efd\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[3313672,3752999,3787790,3787790,3787790,3787790,3787790,3787790,3787790,3787790,3787790,3915213,3915213,3915213,3915213,3915213,4260166,4260166,4260166,4260166,4260166,4260166,4260166,4260166,4260166,4260166,4260166,4260166,4260166,4260166,4260166,4389619],[\"Avengers: Age of Ultron\",\"Inside Out\",\"Jurassic World\",\"Jurassic World\",\"Jurassic World\",\"Jurassic World\",\"Jurassic World\",\"Jurassic World\",\"Jurassic World\",\"Jurassic World\",\"Jurassic World\",\"Mad Max: Fury Road\",\"Mad Max: Fury Road\",\"Mad Max: Fury Road\",\"Mad Max: Fury Road\",\"Mad Max: Fury Road\",\"Star Wars: Episode VII - The Force Awakens\",\"Star Wars: Episode VII - The Force Awakens\",\"Star Wars: Episode VII - The Force Awakens\",\"Star Wars: Episode VII - The Force Awakens\",\"Star Wars: Episode VII - The Force Awakens\",\"Star Wars: Episode VII - The Force Awakens\",\"Star Wars: Episode VII - The Force Awakens\",\"Star Wars: Episode VII - The Force Awakens\",\"Star Wars: Episode VII - The Force Awakens\",\"Star Wars: Episode VII - The Force Awakens\",\"Star Wars: Episode VII - The Force Awakens\",\"Star Wars: Episode VII - The Force Awakens\",\"Star Wars: Episode VII - The Force Awakens\",\"Star Wars: Episode VII - The Force Awakens\",\"Star Wars: Episode VII - The Force Awakens\",\"The Martian\"],[3916648,4122876,3938423,3938423,3950111,4079047,4079047,4084626,4084626,4084626,4099458,3958614,3990819,3990819,4081131,4081131,3907812,3907812,3907812,3938795,3970637,3970637,3970637,3970637,3970637,3970637,3970637,3970637,4073883,4073883,4094732,4098918],[3313672,3752999,3787790,3787790,3787790,3787790,3787790,3787790,3787790,3787790,3787790,3915213,3915213,3915213,3915213,3915213,4260166,4260166,4260166,4260166,4260166,4260166,4260166,4260166,4260166,4260166,4260166,4260166,4260166,4260166,4260166,4389619],[\"Smulders, Jacoba Francisca Maria\",\"Kuzniar, Lennon Wynn\",\"Norvell, Ingrid\",\"Norvell, Ingrid\",\"Sallaway, Seannon Jane\",\"Washington, Kelly Lynn\",\"Washington, Kelly Lynn\",\"Weeks, Jency\",\"Jenc\",\"Little J\",\"Curtis, Bonnie\",\"Ness\",\"Teron, Sharliz\",\"Charlie\",\"Lumb, Leanne\",\"Watson, Leanne\",\"Slade, Sandy\",\"Sandy\",\"Sandy Slade\",\"Ryan, Karol Lesley\",\"Stevens, Cat\",\"Taber, Cat\",\"Tabor, Cat\",\"Cat\",\"Stevens, Cat\",\"Taber, Cat\",\"Tabor, Cat\",\"Cat\",\"Walter, Dame Harriet\",\"Walter, Harriet Mary\",\"White, Kelsey Marie\",\"Wiig, Kristen Carroll\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th>movie ID<\\/th>\\n      <th>movie title<\\/th>\\n      <th>actress ID<\\/th>\\n      <th>movie ID<\\/th>\\n      <th>actress<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":15,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[0,2,3]}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"lengthMenu\":[10,15,25,50,100]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n#### `RIGHT JOIN` {-}\n\nWith a `RIGHT JOIN`, there are more than 300 rows (the `LIMIT` clause keeps us from knowing how many rows, but there are a LOT!) corresponding to all the actresses whose `person_id` above 3900000 are included.  Those actresses who acted in one of the seven top 2015 films are also included in the full results table, but they don't happen to be in the truncated output here. \n\n\n\n::: {.cell output.var='right_movie_actress' fig.asp='0.618'}\n\n```{.sql .cell-code}\n\nSELECT * FROM\n(SELECT t.id,\n       t.title\nFROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year = 2015  \n    AND t.kind_id = 1               # movies only\n    AND idx.info_type_id = 100      # info_type is votes\n    AND idx.info > 400000) AS movs  # at least 400,000 votes     \nRIGHT JOIN (SELECT a.person_id,\n       a.movie_id,\n       n.name\n    FROM cast_info AS a\n    JOIN aka_name AS n ON a.person_id = n.person_id\n    WHERE a.role_id = 2             # acresses only\n        AND a.person_id > 3900000) AS acts ON acts.movie_id = movs.id\nLIMIT 0, 300;\n\n```\n:::\n\n::: {#tbl-right-movie-actress .cell tbl-cap='`RIGHT JOIN` of movies and actresses.' fig.asp='0.618'}\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-64fb84ee507d258aeea6\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-64fb84ee507d258aeea6\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,nullimonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Simonis, Heidi\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Steinhardt, Heide\",\"Simonna\",\"Simonna\",\"Milinyte, Simona\",\"Milinyte, Simona\",\"Belikova, E.\",\"Belikova, E.\",\"Belikova, E.\",\"Belikova, E.\",\"Belikova, E.\",\"Belikova, E.\",\"Belikova, E.\",\"Belikova, E.\",\"Belikova, E.\",\"Belikova, E.\",\"Belikova, E.\",\"Belikova, Ekaterina\",\"Belikova, Ekaterina\",\"Belikova, Ekaterina\",\"Belikova, Ekaterina\",\"Belikova, Ekaterina\",\"Belikova, Ekaterina\",\"Belikova, Ekaterina\",\"Belikova, Ekaterina\",\"Belikova, Ekaterina\",\"Belikova, Ekaterina\",\"Belikova, Ekaterina\",\"Belikova, Ye.\",\"Belikova, Ye.\",\"Belikova, Ye.\",\"Belikova, Ye.\",\"Belikova, Ye.\",\"Belikova, Ye.\",\"Belikova, Ye.\",\"Belikova, Ye.\",\"Belikova, Ye.\",\"Belikova, Ye.\",\"Belikova, Ye.\",\"Bychkova, Elena\",\"Bychkova, Elena\",\"Bychkova, Elena\",\"Bychkova, Elena\",\"Bychkova, Elena\",\"Bychkova, Elena\",\"Bychkova, Elena\",\"Bychkova, Elena\",\"Bychkova, Elena\",\"Bychkova, Elena\",\"Bychkova, Elena\",\"Bychkova, Elena\",\"Bychkova, Elena\",\"Bychkova, Elena\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Jevgenija\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Ye.\",\"Simonova, Yevgeniya\",\"Simonova, Yevgeniya\",\"Simonova, Yevgeniya\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th>movie ID<\\/th>\\n      <th>movie title<\\/th>\\n      <th>actress ID<\\/th>\\n      <th>movie ID<\\/th>\\n      <th>actress<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":15,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[0,2,3]}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"lengthMenu\":[10,15,25,50,100]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n\n\n#### `LEFT JOIN` {-}\n\nWith a `LEFT JOIN`, there are 33 rows corresponding to the actresses in the seven top 2015 movies. Only **The Revenant** did not have any actresses whose `person_id` is greater than 3900000.\n\n\n\n::: {.cell output.var='left_movie_actress' fig.asp='0.618'}\n\n```{.sql .cell-code}\n\nSELECT * FROM\n(SELECT t.id,\n       t.title\nFROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year = 2015  \n    AND t.kind_id = 1               # movies only\n    AND idx.info_type_id = 100      # info_type is votes\n    AND idx.info > 400000) AS movs  # at least 400,000 votes     \nLEFT JOIN (SELECT a.person_id,\n       a.movie_id,\n       n.name\n    FROM cast_info AS a\n    JOIN aka_name AS n ON a.person_id = n.person_id\n    WHERE a.role_id = 2             # acresses only\n        AND a.person_id > 3900000) AS acts ON acts.movie_id = movs.id\nLIMIT 0, 300;\n\n```\n:::\n\n::: {#tbl-left-movie-actress .cell tbl-cap='`LEFT JOIN` of movies and actresses.' fig.asp='0.618'}\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-1e02d2f39f7a99e8186c\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-1e02d2f39f7a99e8186c\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[3313672,3752999,3787790,3787790,3787790,3787790,3787790,3787790,3787790,3787790,3787790,3915213,3915213,3915213,3915213,3915213,4260166,4260166,4260166,4260166,4260166,4260166,4260166,4260166,4260166,4260166,4260166,4260166,4260166,4260166,4260166,4389619,4414139],[\"Avengers: Age of Ultron\",\"Inside Out\",\"Jurassic World\",\"Jurassic World\",\"Jurassic World\",\"Jurassic World\",\"Jurassic World\",\"Jurassic World\",\"Jurassic World\",\"Jurassic World\",\"Jurassic World\",\"Mad Max: Fury Road\",\"Mad Max: Fury Road\",\"Mad Max: Fury Road\",\"Mad Max: Fury Road\",\"Mad Max: Fury Road\",\"Star Wars: Episode VII - The Force Awakens\",\"Star Wars: Episode VII - The Force Awakens\",\"Star Wars: Episode VII - The Force Awakens\",\"Star Wars: Episode VII - The Force Awakens\",\"Star Wars: Episode VII - The Force Awakens\",\"Star Wars: Episode VII - The Force Awakens\",\"Star Wars: Episode VII - The Force Awakens\",\"Star Wars: Episode VII - The Force Awakens\",\"Star Wars: Episode VII - The Force Awakens\",\"Star Wars: Episode VII - The Force Awakens\",\"Star Wars: Episode VII - The Force Awakens\",\"Star Wars: Episode VII - The Force Awakens\",\"Star Wars: Episode VII - The Force Awakens\",\"Star Wars: Episode VII - The Force Awakens\",\"Star Wars: Episode VII - The Force Awakens\",\"The Martian\",\"The Revenant\"],[3916648,4122876,3938423,3938423,3950111,4079047,4079047,4084626,4084626,4084626,4099458,3958614,3990819,3990819,4081131,4081131,3907812,3907812,3907812,3938795,3970637,3970637,3970637,3970637,3970637,3970637,3970637,3970637,4073883,4073883,4094732,4098918,null],[3313672,3752999,3787790,3787790,3787790,3787790,3787790,3787790,3787790,3787790,3787790,3915213,3915213,3915213,3915213,3915213,4260166,4260166,4260166,4260166,4260166,4260166,4260166,4260166,4260166,4260166,4260166,4260166,4260166,4260166,4260166,4389619,null],[\"Smulders, Jacoba Francisca Maria\",\"Kuzniar, Lennon Wynn\",\"Norvell, Ingrid\",\"Norvell, Ingrid\",\"Sallaway, Seannon Jane\",\"Washington, Kelly Lynn\",\"Washington, Kelly Lynn\",\"Weeks, Jency\",\"Jenc\",\"Little J\",\"Curtis, Bonnie\",\"Ness\",\"Teron, Sharliz\",\"Charlie\",\"Lumb, Leanne\",\"Watson, Leanne\",\"Slade, Sandy\",\"Sandy\",\"Sandy Slade\",\"Ryan, Karol Lesley\",\"Stevens, Cat\",\"Taber, Cat\",\"Tabor, Cat\",\"Cat\",\"Stevens, Cat\",\"Taber, Cat\",\"Tabor, Cat\",\"Cat\",\"Walter, Dame Harriet\",\"Walter, Harriet Mary\",\"White, Kelsey Marie\",\"Wiig, Kristen Carroll\",null]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th>movie ID<\\/th>\\n      <th>movie title<\\/th>\\n      <th>actress ID<\\/th>\\n      <th>movie ID<\\/th>\\n      <th>actress<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":15,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[0,2,3]}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"lengthMenu\":[10,15,25,50,100]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n\n\n#### Counting repeat actresses {-}\n\nWe might, for example, want to know how many names / spellings of a name with a specific `person_id` (above 3900000) exist for each `person_id` in each of the top voted seven films of 2015.  \n\nIn @tbl-num-repeat-names why isn't there a column indicating the name of the actress?  (There can't be such a column. Why not?) \n\n\n::: {.cell output.var='num_repeat_names' fig.asp='0.618'}\n\n```{.sql .cell-code}\nSELECT acts.person_id, \n       COUNT(*) AS num_repeat_names\nFROM (SELECT t.id,\n       t.title\nFROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year = 2015  \n    AND t.kind_id = 1               # movies only\n    AND idx.info_type_id = 100      # info_type is votes\n    AND idx.info > 400000) AS movs  # at least 400,000 votes\nJOIN (SELECT a.person_id,\n       a.movie_id,\n       n.name\n    FROM cast_info AS a\n    JOIN aka_name AS n ON a.person_id = n.person_id\n    WHERE a.role_id = 2             # acresses only\n        AND a.person_id > 3900000) AS acts ON acts.movie_id = movs.id\nGROUP BY acts.person_id;\n```\n:::\n\n::: {#tbl-num-repeat-names .cell tbl-cap='For each `person_id` (> 3900000) in the seven top voted 2015 films, how many names / spellings are associated with the `person_id`?' fig.asp='0.618'}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-condensed\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> person_id </th>\n   <th style=\"text-align:right;\"> num_repeat_names </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 3916648 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 4122876 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3938423 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3950111 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 4079047 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 4084626 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 4099458 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3958614 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3990819 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 4081131 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3907812 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3938795 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3970637 </td>\n   <td style=\"text-align:right;\"> 8 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 4073883 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 4094732 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 4098918 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n      \n#### Counting number of actresses per film {-}\n\nWe might, for example, want to know how many actresses with a specific `person_id` (above 3900000) are in each of the top voted seven films of 2015.  \n\n\n::: {.cell output.var='num_actress' fig.asp='0.618'}\n\n```{.sql .cell-code}\nSELECT movs.id, \n       movs.title,\n       COUNT(*) AS num_actress\nFROM (SELECT t.id,\n       t.title\nFROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year = 2015  \n    AND t.kind_id = 1               # movies only\n    AND idx.info_type_id = 100      # info_type is votes\n    AND idx.info > 400000) AS movs  # at least 400,000 votes\nJOIN (SELECT a.person_id,\n       a.movie_id,\n       n.name\n    FROM cast_info AS a\n    JOIN aka_name AS n ON a.person_id = n.person_id\n    WHERE a.role_id = 2             # acresses only\n        AND a.person_id > 3900000) AS acts ON acts.movie_id = movs.id\nGROUP BY movs.id;\n```\n:::\n\n::: {#tbl-num-actress .cell tbl-cap='Number of actresses (with person_id > 3900000) in each of the seven top voted films of 2015.  Recall that The Revenant had no actresses with person_id > 3900000, so there are only six movies listed.' fig.asp='0.618'}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-condensed\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> id </th>\n   <th style=\"text-align:left;\"> title </th>\n   <th style=\"text-align:right;\"> num_actress </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 3313672 </td>\n   <td style=\"text-align:left;\"> Avengers: Age of Ultron </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3752999 </td>\n   <td style=\"text-align:left;\"> Inside Out </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3787790 </td>\n   <td style=\"text-align:left;\"> Jurassic World </td>\n   <td style=\"text-align:right;\"> 9 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3915213 </td>\n   <td style=\"text-align:left;\"> Mad Max: Fury Road </td>\n   <td style=\"text-align:right;\"> 5 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 4260166 </td>\n   <td style=\"text-align:left;\"> Star Wars: Episode VII - The Force Awakens </td>\n   <td style=\"text-align:right;\"> 15 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 4389619 </td>\n   <td style=\"text-align:left;\"> The Martian </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n## `UNION`ing\n\nIn **SQL** a `UNION` clause combines two different tables by their rows (whereas `JOIN` combines two tables by columns). Think about `UNION` similarly to the `bind_rows()` command in **R**.\n\n\n::: {.cell fig.asp='0.618'}\n::: {.cell-output-display}\n![UNION binds rows while JOIN appends columns, image credit: Jane Williams https://blog.devart.com/mysql-union-tutorial-html.html](04-sql-joins_files/figure-html/fig-table-union-1.png){#fig-table-union fig-alt='Mini data tables describing how UNION binds rows and JOIN appends columns.' width=120%}\n:::\n:::\n\n\n### `UNION`s\n\n`UNION` does not check the names of the columns to make sure they match.  `UNION` requires that the number of columns be the same and that the variable type be the same for all columns in the two tables being combined.\n\n@tbl-foo-bar contains a silly example.  The first table has 1 as `bar` and the second table has 20 as `bar`.  But when the tables are `UNION`ed, the `bar` column contains `c(1, 10)`. **SQL** took the column names from the first table and appended the second table without considering the variable names.\n\n\n::: {.cell output.var='foo_bar' fig.asp='0.618'}\n\n```{.sql .cell-code}\nSELECT \n    1 AS bar,\n    2 AS foo\n\nUNION\n\nSELECT \n    10 AS foo,\n    20 AS bar;\n```\n:::\n\n::: {#tbl-foo-bar .cell tbl-cap='The variable names are chosen from the first table.  The names and order of the variables in the second table are ignored when using `UNION`.' fig.asp='0.618'}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-condensed\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> bar </th>\n   <th style=\"text-align:right;\"> foo </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 10 </td>\n   <td style=\"text-align:right;\"> 20 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n`UNION` is specifically designed to bind rows from two different `SELECT` queries where the variables have been selected in the same order.  If the two `SELECT` clauses are done from the same table with the same order of variables, you do not need to worry about the order of the variables matching up in the `UNION`.  If you are `UNION`ing two very different subqueries, you *do* need to worry about the variables and their order.\n\n#### `UNION` {-}\n\nLet's say we want to combine the top voted movies from 2015 with the top voted movies from 2019.  However, to account for time, we require the movies from 2015 to have more votes (400,000) than the movies from 2017 (200,000).  That is, the `WHERE` clause is different for the two subqueries.\n\n\n\n\n::: {.cell output.var='union_years' fig.asp='0.618'}\n\n```{.sql .cell-code}\n(SELECT t.title, \n        t.production_year, \n        idx.info AS num_votes\n    FROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year = 2015  \n    AND t.kind_id = 1               \n    AND idx.info_type_id = 100      \n    AND idx.info > 400000)\n\nUNION\n\n(SELECT t.title, \n        t.production_year, \n        idx.info AS num_votes\n    FROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year = 2017  \n    AND t.kind_id = 1               \n    AND idx.info_type_id = 100      \n    AND idx.info > 200000)\nLIMIT 0, 100;\n   \n\n```\n:::\n\n::: {#tbl-union-years .cell tbl-cap='The variable names are chosen from the first table.  The names and order of the variables in the second table are ignored when using `UNION`.' fig.asp='0.618'}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-condensed\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> title </th>\n   <th style=\"text-align:right;\"> production_year </th>\n   <th style=\"text-align:left;\"> num_votes </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Avengers: Age of Ultron </td>\n   <td style=\"text-align:right;\"> 2015 </td>\n   <td style=\"text-align:left;\"> 540606 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Inside Out </td>\n   <td style=\"text-align:right;\"> 2015 </td>\n   <td style=\"text-align:left;\"> 443051 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Jurassic World </td>\n   <td style=\"text-align:right;\"> 2015 </td>\n   <td style=\"text-align:left;\"> 471237 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Mad Max: Fury Road </td>\n   <td style=\"text-align:right;\"> 2015 </td>\n   <td style=\"text-align:left;\"> 666484 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Star Wars: Episode VII - The Force Awakens </td>\n   <td style=\"text-align:right;\"> 2015 </td>\n   <td style=\"text-align:left;\"> 691691 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> The Martian </td>\n   <td style=\"text-align:right;\"> 2015 </td>\n   <td style=\"text-align:left;\"> 583987 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> The Revenant </td>\n   <td style=\"text-align:right;\"> 2015 </td>\n   <td style=\"text-align:left;\"> 526189 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Dunkirk </td>\n   <td style=\"text-align:right;\"> 2017 </td>\n   <td style=\"text-align:left;\"> 229089 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Guardians of the Galaxy Vol. 2 </td>\n   <td style=\"text-align:right;\"> 2017 </td>\n   <td style=\"text-align:left;\"> 281845 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Logan </td>\n   <td style=\"text-align:right;\"> 2017 </td>\n   <td style=\"text-align:left;\"> 397056 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Spider-Man: Homecoming </td>\n   <td style=\"text-align:right;\"> 2017 </td>\n   <td style=\"text-align:left;\"> 209930 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Wonder Woman </td>\n   <td style=\"text-align:right;\"> 2017 </td>\n   <td style=\"text-align:left;\"> 306611 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n\n#### `UNION ALL` {-}\n\n`UNION` does check, however, to see if any of the rows in the two tables are identical.  If the goal is to include duplicates across two tables, use `UNION ALL` instead of `UNION`.\n\nLet's say that the first table is all movies with production year after 2012 and number of votes greater than 500,000.  The second table is movies with production year equal to 2015 and number of votes greater than 400,000.  Even though the Martian would have been in both tables, the results table lists The Marian only once in @tbl-union-years-votes.\n\n\n\n::: {.cell output.var='union_years_votes' fig.asp='0.618'}\n\n```{.sql .cell-code}\n(SELECT t.title,\n        t.production_year, \n        idx.info AS num_votes\n    FROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year > 2012  \n    AND t.kind_id = 1               \n    AND idx.info_type_id = 100      \n    AND idx.info > 500000)\n\nUNION\n\n(SELECT t.title, \n        t.production_year, \n        idx.info AS num_votes\n    FROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year = 2015  \n    AND t.kind_id = 1               \n    AND idx.info_type_id = 100      \n    AND idx.info > 400000)\nORDER BY production_year DESC, num_votes;\n\n```\n:::\n\n::: {#tbl-union-years-votes .cell tbl-cap='Using `UNION` to combine movies from table 1: later than 2012 and at least 500,000 votes with movies from table 2: 2015 and at least 400,000 votes.' fig.asp='0.618'}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-condensed\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> title </th>\n   <th style=\"text-align:right;\"> production_year </th>\n   <th style=\"text-align:left;\"> num_votes </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Batman v Superman: Dawn of Justice </td>\n   <td style=\"text-align:right;\"> 2016 </td>\n   <td style=\"text-align:left;\"> 500037 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Deadpool </td>\n   <td style=\"text-align:right;\"> 2016 </td>\n   <td style=\"text-align:left;\"> 673887 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Inside Out </td>\n   <td style=\"text-align:right;\"> 2015 </td>\n   <td style=\"text-align:left;\"> 443051 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Jurassic World </td>\n   <td style=\"text-align:right;\"> 2015 </td>\n   <td style=\"text-align:left;\"> 471237 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> The Revenant </td>\n   <td style=\"text-align:right;\"> 2015 </td>\n   <td style=\"text-align:left;\"> 526189 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Avengers: Age of Ultron </td>\n   <td style=\"text-align:right;\"> 2015 </td>\n   <td style=\"text-align:left;\"> 540606 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> The Martian </td>\n   <td style=\"text-align:right;\"> 2015 </td>\n   <td style=\"text-align:left;\"> 583987 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Mad Max: Fury Road </td>\n   <td style=\"text-align:right;\"> 2015 </td>\n   <td style=\"text-align:left;\"> 666484 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Star Wars: Episode VII - The Force Awakens </td>\n   <td style=\"text-align:right;\"> 2015 </td>\n   <td style=\"text-align:left;\"> 691691 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Interstellar </td>\n   <td style=\"text-align:right;\"> 2014 </td>\n   <td style=\"text-align:left;\"> 1102826 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Whiplash </td>\n   <td style=\"text-align:right;\"> 2014 </td>\n   <td style=\"text-align:left;\"> 507827 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> The Imitation Game </td>\n   <td style=\"text-align:right;\"> 2014 </td>\n   <td style=\"text-align:left;\"> 550521 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> The Grand Budapest Hotel </td>\n   <td style=\"text-align:right;\"> 2014 </td>\n   <td style=\"text-align:left;\"> 553558 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Captain America: The Winter Soldier </td>\n   <td style=\"text-align:right;\"> 2014 </td>\n   <td style=\"text-align:left;\"> 562419 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> X-Men: Days of Future Past </td>\n   <td style=\"text-align:right;\"> 2014 </td>\n   <td style=\"text-align:left;\"> 567780 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Gone Girl </td>\n   <td style=\"text-align:right;\"> 2014 </td>\n   <td style=\"text-align:left;\"> 664035 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Guardians of the Galaxy </td>\n   <td style=\"text-align:right;\"> 2014 </td>\n   <td style=\"text-align:left;\"> 795151 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 12 Years a Slave </td>\n   <td style=\"text-align:right;\"> 2013 </td>\n   <td style=\"text-align:left;\"> 506640 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Now You See Me </td>\n   <td style=\"text-align:right;\"> 2013 </td>\n   <td style=\"text-align:left;\"> 507519 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> World War Z </td>\n   <td style=\"text-align:right;\"> 2013 </td>\n   <td style=\"text-align:left;\"> 509285 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> The Hobbit: The Desolation of Smaug </td>\n   <td style=\"text-align:right;\"> 2013 </td>\n   <td style=\"text-align:left;\"> 526001 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> The Hunger Games: Catching Fire </td>\n   <td style=\"text-align:right;\"> 2013 </td>\n   <td style=\"text-align:left;\"> 537678 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Man of Steel </td>\n   <td style=\"text-align:right;\"> 2013 </td>\n   <td style=\"text-align:left;\"> 592427 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Iron Man Three </td>\n   <td style=\"text-align:right;\"> 2013 </td>\n   <td style=\"text-align:left;\"> 607323 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Gravity </td>\n   <td style=\"text-align:right;\"> 2013 </td>\n   <td style=\"text-align:left;\"> 640900 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> The Wolf of Wall Street </td>\n   <td style=\"text-align:right;\"> 2013 </td>\n   <td style=\"text-align:left;\"> 900450 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\nWhen `UNION ALL` is applied in the same context, The Martian is listed twice in the results table given in @tbl-union-all-years-votes.\n\n\n::: {.cell output.var='union_all_years_votes' fig.asp='0.618'}\n\n```{.sql .cell-code}\n(SELECT t.title,\n        t.production_year, \n        idx.info AS num_votes\n    FROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year > 2012  \n    AND t.kind_id = 1               \n    AND idx.info_type_id = 100      \n    AND idx.info > 500000)\n\nUNION ALL\n\n(SELECT t.title, \n        t.production_year, \n        idx.info AS num_votes\n    FROM title AS t\nJOIN movie_info_idx AS idx ON idx.movie_id = t.id\nWHERE t.production_year = 2015  \n    AND t.kind_id = 1               \n    AND idx.info_type_id = 100      \n    AND idx.info > 400000)\nORDER BY production_year DESC, num_votes;\n\n```\n:::\n\n::: {#tbl-union-all-years-votes .cell tbl-cap='Using `UNION ALL` to combine movies from table 1: later than 2012 and at least 500,000 votes with movies from table 2: 2015 and at least 400,000 votes.' fig.asp='0.618'}\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-condensed\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> title </th>\n   <th style=\"text-align:right;\"> production_year </th>\n   <th style=\"text-align:left;\"> num_votes </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Batman v Superman: Dawn of Justice </td>\n   <td style=\"text-align:right;\"> 2016 </td>\n   <td style=\"text-align:left;\"> 500037 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Deadpool </td>\n   <td style=\"text-align:right;\"> 2016 </td>\n   <td style=\"text-align:left;\"> 673887 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Inside Out </td>\n   <td style=\"text-align:right;\"> 2015 </td>\n   <td style=\"text-align:left;\"> 443051 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Jurassic World </td>\n   <td style=\"text-align:right;\"> 2015 </td>\n   <td style=\"text-align:left;\"> 471237 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> The Revenant </td>\n   <td style=\"text-align:right;\"> 2015 </td>\n   <td style=\"text-align:left;\"> 526189 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> The Revenant </td>\n   <td style=\"text-align:right;\"> 2015 </td>\n   <td style=\"text-align:left;\"> 526189 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Avengers: Age of Ultron </td>\n   <td style=\"text-align:right;\"> 2015 </td>\n   <td style=\"text-align:left;\"> 540606 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Avengers: Age of Ultron </td>\n   <td style=\"text-align:right;\"> 2015 </td>\n   <td style=\"text-align:left;\"> 540606 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> The Martian </td>\n   <td style=\"text-align:right;\"> 2015 </td>\n   <td style=\"text-align:left;\"> 583987 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> The Martian </td>\n   <td style=\"text-align:right;\"> 2015 </td>\n   <td style=\"text-align:left;\"> 583987 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Mad Max: Fury Road </td>\n   <td style=\"text-align:right;\"> 2015 </td>\n   <td style=\"text-align:left;\"> 666484 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Mad Max: Fury Road </td>\n   <td style=\"text-align:right;\"> 2015 </td>\n   <td style=\"text-align:left;\"> 666484 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Star Wars: Episode VII - The Force Awakens </td>\n   <td style=\"text-align:right;\"> 2015 </td>\n   <td style=\"text-align:left;\"> 691691 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Star Wars: Episode VII - The Force Awakens </td>\n   <td style=\"text-align:right;\"> 2015 </td>\n   <td style=\"text-align:left;\"> 691691 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Interstellar </td>\n   <td style=\"text-align:right;\"> 2014 </td>\n   <td style=\"text-align:left;\"> 1102826 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Whiplash </td>\n   <td style=\"text-align:right;\"> 2014 </td>\n   <td style=\"text-align:left;\"> 507827 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> The Imitation Game </td>\n   <td style=\"text-align:right;\"> 2014 </td>\n   <td style=\"text-align:left;\"> 550521 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> The Grand Budapest Hotel </td>\n   <td style=\"text-align:right;\"> 2014 </td>\n   <td style=\"text-align:left;\"> 553558 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Captain America: The Winter Soldier </td>\n   <td style=\"text-align:right;\"> 2014 </td>\n   <td style=\"text-align:left;\"> 562419 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> X-Men: Days of Future Past </td>\n   <td style=\"text-align:right;\"> 2014 </td>\n   <td style=\"text-align:left;\"> 567780 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Gone Girl </td>\n   <td style=\"text-align:right;\"> 2014 </td>\n   <td style=\"text-align:left;\"> 664035 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Guardians of the Galaxy </td>\n   <td style=\"text-align:right;\"> 2014 </td>\n   <td style=\"text-align:left;\"> 795151 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 12 Years a Slave </td>\n   <td style=\"text-align:right;\"> 2013 </td>\n   <td style=\"text-align:left;\"> 506640 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Now You See Me </td>\n   <td style=\"text-align:right;\"> 2013 </td>\n   <td style=\"text-align:left;\"> 507519 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> World War Z </td>\n   <td style=\"text-align:right;\"> 2013 </td>\n   <td style=\"text-align:left;\"> 509285 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> The Hobbit: The Desolation of Smaug </td>\n   <td style=\"text-align:right;\"> 2013 </td>\n   <td style=\"text-align:left;\"> 526001 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> The Hunger Games: Catching Fire </td>\n   <td style=\"text-align:right;\"> 2013 </td>\n   <td style=\"text-align:left;\"> 537678 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Man of Steel </td>\n   <td style=\"text-align:right;\"> 2013 </td>\n   <td style=\"text-align:left;\"> 592427 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Iron Man Three </td>\n   <td style=\"text-align:right;\"> 2013 </td>\n   <td style=\"text-align:left;\"> 607323 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Gravity </td>\n   <td style=\"text-align:right;\"> 2013 </td>\n   <td style=\"text-align:left;\"> 640900 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> The Wolf of Wall Street </td>\n   <td style=\"text-align:right;\"> 2013 </td>\n   <td style=\"text-align:left;\"> 900450 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n#### `FULL OUTER JOIN` via `UNION` {#sec-full-union}\n\n**MySQL** doesn't have a `FULL OUTER JOIN` (although other implementations of **SQL** do have full join functionality).  However, we can mimic a full join using right and left joins with `UNION`.\n\nRecall the ideas of `RIGHT JOIN` (which keeps all observations in the right table) and `LEFT JOIN` (which keeps all observations in the left table). By `UNION`ing the right and left joins, all of the observations are obtained (i.e., a full join).  Using the function `sqldf()` in the **sqldf** **R** package, the full join will be demonstrated using the 1960s rock bands. \n\nNotice that in the `RIGHT JOIN` the `name` column must come from the *right* table (not the *left* table).\n\nAlso notice that `UNION ALL` keeps the duplicate rows which is probably not what we want.\n\n\n\n::: {.cell fig.asp='0.618'}\n\n```{.r .cell-code}\nsqldf::sqldf(\"SELECT star.name, star.band, inst.plays \n      FROM band_members AS star\n      LEFT JOIN band_instruments AS inst ON star.name = inst.name\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  name    band  plays\n1 Mick  Stones   <NA>\n2 John Beatles guitar\n3 Paul Beatles   bass\n```\n:::\n\n```{.r .cell-code}\nsqldf::sqldf(\"SELECT inst.name, star.band, inst.plays \n      FROM band_members AS star\n      RIGHT JOIN band_instruments AS inst ON star.name = inst.name\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   name    band  plays\n1  John Beatles guitar\n2  Paul Beatles   bass\n3 Keith    <NA> guitar\n```\n:::\n\n```{.r .cell-code}\nsqldf::sqldf(\"SELECT star.name, star.band, inst.plays \n      FROM band_members AS star\n      LEFT JOIN band_instruments AS inst ON star.name = inst.name\nUNION\n      SELECT inst.name, star.band, inst.plays \n      FROM band_members AS star\n      RIGHT JOIN band_instruments AS inst ON star.name = inst.name \")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   name    band  plays\n1  John Beatles guitar\n2 Keith    <NA> guitar\n3  Mick  Stones   <NA>\n4  Paul Beatles   bass\n```\n:::\n\n```{.r .cell-code}\nsqldf::sqldf(\"SELECT star.name, star.band, inst.plays \n      FROM band_members AS star\n      LEFT JOIN band_instruments AS inst ON star.name = inst.name\nUNION ALL\n      SELECT inst.name, star.band, inst.plays \n      FROM band_members AS star\n      RIGHT JOIN band_instruments AS inst ON star.name = inst.name \")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   name    band  plays\n1  Mick  Stones   <NA>\n2  John Beatles guitar\n3  Paul Beatles   bass\n4  John Beatles guitar\n5  Paul Beatles   bass\n6 Keith    <NA> guitar\n```\n:::\n:::\n\n\n\n## Best practice\n\nIt is always a good idea to terminate the **SQL** connection when you are done with it.\n\n\n::: {.cell fig.asp='0.618'}\n\n```{.r .cell-code}\ndbDisconnect(con_imdb, shutdown = TRUE)\n```\n:::\n\n\n\n## <i class=\"fas fa-lightbulb\"></i> Reflection questions  \n\n1. What are the different types of joins?  Which data from which table gets kept and which gets removed for each type of join?\n\n2. What is the difference between a join and a union?\n\n3. When working with multiple tables, how (and why) is a variable linked to its table?\n\n4. Consider a `RIGHT JOIN`.  If there are records in the right table that are not in the left table, what will the value of the left table variable be for those records? \n\n## <i class=\"fas fa-balance-scale\"></i> Ethics considerations \n\n1. What can happen if a `UNION` is done without carefully matching up the columns of the two tables being `UNION`ed?\n\n2. How will you know if `JOIN`ing removed some records?  What if the `JOIN` produced missing values for some of the variables?  How should we deal with missing data or arbitrarily removed records?\n",
    "supporting": [
      "04-sql-joins_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/font-awesome-6.4.2/css/all.min.css\" rel=\"stylesheet\" />\n<link href=\"site_libs/font-awesome-6.4.2/css/v4-shims.min.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n<link href=\"site_libs/bsTable-3.3.7/bootstrapTable.min.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/bsTable-3.3.7/bootstrapTable.js\"></script>\n<script src=\"site_libs/htmlwidgets-1.6.2/htmlwidgets.js\"></script>\n<link href=\"site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/datatables-binding-0.28/datatables.js\"></script>\n<script src=\"site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"site_libs/dt-core-1.13.4/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"site_libs/dt-core-1.13.4/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/dt-core-1.13.4/js/jquery.dataTables.min.js\"></script>\n<link href=\"site_libs/crosstalk-1.2.0/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/crosstalk-1.2.0/js/crosstalk.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}